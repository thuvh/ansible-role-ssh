---
- name: create dot ssh directory
  file:
    path: "{{ ansible_facts.user_dir }}/.ssh"
    owner: "{{ ansible_facts.user_id }}"
    group: "{{ ansible_facts.user_id }}"
    mode: "0750"
    state: directory

- name: get content of shh key (private and public)
  set_fact:
    ssh_private_key: "{{ lookup('file', ssh_private_key_path, wantlist=True) }}"
    ssh_public_key: "{{ lookup('file', ssh_public_key_path, wantlist=True) }}"

- name: upload ssh private key
  template:
    src: "id_rsa.j2"
    dest: "{{ ansible_facts.user_dir }}/.ssh/id_rsa"
    owner: "{{ ansible_facts.user_id }}"
    group: "{{ ansible_facts.user_id }}"
    mode: "0600"

- name: upload ssh public key
  template:
    src: "id_rsa.pub.j2"
    dest: "{{ ansible_facts.user_dir }}/.ssh/id_rsa.pub"
    owner: "{{ ansible_facts.user_id }}"
    group: "{{ ansible_facts.user_id }}"
    mode: "0644"

- name: authorized_keys init
  set_fact:
    ssh_authorized_keys: []

- name: authorized_keys get keys
  set_fact:
    ssh_authorized_keys: >-
      {{
        ssh_authorized_keys + lookup(
        'url',
        'https://gitlab.com/' + item + '.keys',
        headers={ 'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_4) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/83.0.4103.97 Safari/537.36'},
        wantlist=True)
      }}
  with_items: "{{ ssh_gitlab_usernames }}"

- name: authorized_keys collect all keys
  set_fact:
    ssh_authorized_keys: "{{ ssh_authorized_keys + ssh_public_key }}"

- name: set authorized keys taken from variables
  authorized_key:
    user: "{{ ansible_facts.user_id }}"
    state: present
    key: "{{ ssh_authorized_keys | join('\n') }}"
    exclusive: "yes"
